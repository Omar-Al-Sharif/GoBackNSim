//
// Generated file, do not edit! Created by nedtool 5.6 from TransmittedMsg.msg.
//

#ifndef __TRANSMITTEDMSG_M_H
#define __TRANSMITTEDMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>TransmittedMsg.msg:21</tt> by nedtool.
 * <pre>
 * packet TransmittedMsg
 * {
 *     //    \@customize(true);  // see the generated C++ header for more info
 *     //    int someField;
 *     //    abstract int anotherField;
 *     int parity;
 *     int seqNumber;
 *     string payload; // the message contents after byte stuffing (in characters)
 *     int frameType; //Data=0/ACK=1 /NACK=2
 *     int ackNumber;
 * 
 * }
 * </pre>
 */
class TransmittedMsg : public ::omnetpp::cPacket
{
  protected:
    int parity;
    int seqNumber;
    ::omnetpp::opp_string payload;
    int frameType;
    int ackNumber;

  private:
    void copy(const TransmittedMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TransmittedMsg&);

  public:
    TransmittedMsg(const char *name=nullptr, short kind=0);
    TransmittedMsg(const TransmittedMsg& other);
    virtual ~TransmittedMsg();
    TransmittedMsg& operator=(const TransmittedMsg& other);
    virtual TransmittedMsg *dup() const override {return new TransmittedMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getParity() const;
    virtual void setParity(int parity);
    virtual int getSeqNumber() const;
    virtual void setSeqNumber(int seqNumber);
    virtual const char * getPayload() const;
    virtual void setPayload(const char * payload);
    virtual int getFrameType() const;
    virtual void setFrameType(int frameType);
    virtual int getAckNumber() const;
    virtual void setAckNumber(int ackNumber);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TransmittedMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TransmittedMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __TRANSMITTEDMSG_M_H

